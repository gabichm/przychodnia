@page "/Patient/Specialists"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using BlazorApp1.Data
@using Microsoft.EntityFrameworkCore
@inject UserManager<ApplicationUser> UserManager
@inject IDoctorService DoctorService

<PageTitle>Specialists</PageTitle>

<h3>Specialists</h3>

<div>
    <a href="/appointment/cardiology" class="btn btn-primary">Cardiology</a>
</div>
<div>
    <a href="/appointment/Neurology" class="btn btn-primary">Neurology</a>
</div>
<div>
    <a href="/appointment/Dermatology" class="btn btn-primary">Dermatology</a>
</div>
<div>
    <a href="/appointment/Endocrinology" class="btn btn-primary">Endocrinology</a>
</div>
<div>
    <a href="/appointment/GeneralSurgery" class="btn btn-primary">General Surgery</a>
</div>
<div>
    <a href="/appointment/Gynecology" class="btn btn-primary">Gynecology</a>
</div>
<div>
    <a href="/appointment/Oncology" class="btn btn-primary">Oncology</a>
</div>
<div>
    <a href="/appointment/Orthopedics" class="btn btn-primary">Orthopedics</a>
</div>
<div>
    <a href="/appointment/Pediatrics" class="btn btn-primary">Pediatrics</a>
</div>
<div>
    <a href="/appointment/Psychiatry" class="btn btn-primary">Psychiatry</a>
</div>
<div>
    <a href="/appointment/Radiology" class="btn btn-primary">Radiology</a>
</div>
<!-- Add other buttons for each specialization -->

@code {
    // No need for code if you're directly specifying URLs
}



@* @page "/patient/specialists" *@
@* @inject NavigationManager NavigationManager *@
@* @inject UserManager<ApplicationUser> UserManager *@
@* @inject AuthenticationStateProvider AuthenticationStateProvider *@
@* *@
@* @attribute [Authorize] *@
@* @attribute [StreamRendering] *@
@* @rendermode InteractiveAuto *@
@* *@
@* <PageTitle>Profile</PageTitle> *@
@* *@
@* <h3>Profile</h3> *@
@* <StatusMessage /> *@
@* *@
@* @foreach (var speciality in specializations) *@
@* { *@
@*     <div class="form-check"> *@
@*         <button @onclick="() => SeeVisits(speciality)" class="btn btn-primary">@speciality</button> *@
@*     </div> *@
@* } *@
@* *@
@* @code { *@
@*     private ApplicationUser user = default!; *@
@*     private string? username; *@
@*     private string? phoneNumber; *@
@*     private List<string> specializations = new List<string> *@
@*     { *@
@*         "Cardiology", "Neurology", "Orthopedics", "Pediatrics", *@
@*         "Dermatology", "Gynecology", "Radiology", "Psychiatry", *@
@*         "Oncology", "Endocrinology", "General Surgery" *@
@*     }; *@
@* *@
@*     protected override async Task OnInitializedAsync() *@
@*     { *@
@*         var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync(); *@
@*         var principal = authState.User; *@
@*         user = await UserManager.GetUserAsync(principal); *@
@*     } *@
@* *@
@*     private async Task SeeVisits(string speciality) *@
@*     { *@
@*         Console.WriteLine($"Przycisk dla specjalizacji {speciality} został kliknięty."); // Dodajemy komunikat do konsoli przeglądarki. *@
@*         NavigationManager.NavigateTo($"/appointment/{speciality}"); *@
@*     } *@

@*     // private class InputModel *@
@*     // { *@
@*     //     [Phone] *@
@*     //     [Display(Name = "Phone number")] *@
@*     //     public string? PhoneNumber { get; set; } *@
@*     // *@
@*     //     [Display(Name = "Birth Date")] *@
@*     //     public DateOnly? BirthDate { get; set; } *@
@*     // } *@
@* } *@


@page "/Appointment/Cardiology"

@inject NavigationManager NavigationManager
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject IAppointmentService AppointmentService
@inject IDoctorService DoctorService
@inject AuthenticationStateProvider AuthenticationStateProvider


<PageTitle>Appointments for Cardiology</PageTitle>

<h3>Appointments for Cardiology</h3>

<AuthorizeView>
    Hello @context.User.Identity?.Name!


@* @if (appointments == null) *@
@* { *@
@* <p><em>Loading...</em></p> *@
@* } *@
@* else if (!appointments.Any()) *@
@* { *@
@* <p><em>No available appointments.</em></p> *@
@* } *@
@* else *@
@* { *@
@* <table class="table"> *@
@*     <thead> *@
@*     <tr> *@
@*         <th>Date</th> *@
@*         <th>Doctor</th> *@
@*         <th>Action</th> *@
@*     </tr> *@
    @* </thead> *@
    @* <tbody> *@
    @* @foreach (var appointment in appointments) *@
    @* { *@
    @* var doctor = doctors.FirstOrDefault(d => d.DoctorId == appointment.DoctorId); *@
    @* <tr> *@
        @* <td>@appointment.Date</td> *@
        @* <td>@(doctor?.Name) @(doctor?.LastName)</td> *@
        

    @* </tr> *@
    }
    @* </tbody> *@
@* </table> *@
@* } *@
</AuthorizeView>
@code {

    private ApplicationUser user = default!;
    private string Id = default!;
    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;
    

    // [SupplyParameterFromForm] private InputModel Input { get; set; } = new();
public string Speciality { get; set; } = "Cardiology"; // Default specialization

// private List<Appointment> appointments = new();
private List<Doctor> doctors = new();

protected override async Task OnInitializedAsync()
{
    Console.WriteLine(1);
    user = await UserAccessor.GetRequiredUserAsync(HttpContext);
    Console.WriteLine(2);
    Id = user.Id;
    Console.WriteLine(3);
    ScheduleAppointment();
// doctors = await DoctorService.GetDoctors();
// var doctorIds = doctors.Where(d => d.Specialty == Speciality)
// .Select(d => d.DoctorId)
// .ToList();
//
// var allAppointments = await AppointmentService.GetAppointments();
// appointments = allAppointments.Where(a => doctorIds.Contains(a.DoctorId) && a.Status == "free")
// .ToList();
}

private async Task ScheduleAppointment(/*Appointment appointment*/)
{
    Console.WriteLine("I'm in the ScheduleAppointment method");
    var Allappointment = await AppointmentService.GetAppointments();
    var appointment = Allappointment.FirstOrDefault(a => a.Status == "free");
    appointment.Status = "Scheduled";
    appointment.PatientId = Id;

if (appointment.PatientId == null)
{
await AppointmentService.UpdateAppointment(appointment);
NavigationManager.NavigateTo("/Patient/Specialists");
}

}

}
}
